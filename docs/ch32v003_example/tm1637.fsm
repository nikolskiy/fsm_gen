name: tm1637
type: static
header:
  prolog: |
    #include "config.h"
source:
  prolog: |
    #include <stdio.h>
    #include "tm1637_i2c.h"
    #define COMM1 0x40
    #define COMM2 0xC0
    #define COMM3 0x80
interrupts state type: uint32_t
events:
  segments:
    - e_data: uint32_t
  brightness:
    - val: uint8_t
  done:
delayed:
  done:
    max: 2
  segments:
    max: 2
  brightness:
    max: 2
queue: true
unhandled events: ignore
state variables:
  data:
    uint32_t: 0
  bytes:
    uint8_t: 0
  brightness:
    uint8_t: 0
states:
  wait:
  send_brightness_start:
  send_brightness:
  send_brightness_stop:

  send_command_comm1_start:
  send_command_comm1:
  send_command_comm1_stop:
  send_command_comm2_start:
  send_data:
  send_stop:
initial state: wait
transitions:

# brightness

  - from: wait
    to: send_brightness_start
    when: brightness
    do: |
      brightness = val;
      tm1637_i2c_start_enqueue(delay_done());

  - from: send_brightness_start
    to: send_brightness
    when: done
    do: |
      tm1637_i2c_send_enqueue(COMM3 | (brightness & 0x7) | (brightness > 0 ? 0x8 : 0), delay_done());

  - from: send_brightness
    to: send_brightness_stop
    when: done
    do: tm1637_i2c_stop_enqueue(delay_done());

  - from: send_brightness_stop
    to: wait
    when: done

# segments

  - from: wait
    to: send_command_comm1_start
    when: segments
    do: |
      data = ((e_data & 0xFFFF) << 16) | ((e_data >> 16));
      data = ((data & 0x00FF00FF) << 8) | ((data & 0xFF00FF00) >> 8);
      bytes = 4;
      tm1637_i2c_start_enqueue(delay_done());

  - from: send_command_comm1_start
    to: send_command_comm1
    when: done
    do: tm1637_i2c_send_enqueue(COMM1, delay_done());

  - from: send_command_comm1
    to: send_command_comm1_stop
    when: done
    do: tm1637_i2c_stop_enqueue(delay_done());

  - from: send_command_comm1_stop
    to: send_command_comm2_start
    when: done
    do: tm1637_i2c_start_enqueue(delay_done());

  - from: send_command_comm2_start
    to: send_data
    when: done
    do: tm1637_i2c_send_enqueue(COMM2, delay_done());

  - from: send_data
    when: done
    if: bytes > 0
    do: |
      tm1637_i2c_send_enqueue(data & 0xFF, delay_done());
      data >>= 8;
      --bytes;

  - from: send_data
    to: send_stop
    when: done
    if: bytes == 0
    do: |
      tm1637_i2c_stop_enqueue(delay_done());

  - from: send_stop
    to: wait
    when: done
